# Generated by Django 5.2.1 on 2025-06-03 12:33

import Products.models
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=255, verbose_name='Category Name')),
                ('description', models.TextField(blank=True, null=True)),
                ('display_order', models.PositiveIntegerField(default=0, help_text="Détermine l'ordre d'affichage dans les listes (les nombres inférieurs apparaissent en premier)")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('parent_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subcategories', to='Products.category')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='CategoryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=Products.models.category_image_upload_path)),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('is_primary', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage des images de la catégorie")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='Products.category')),
            ],
            options={
                'ordering': ['display_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('display_order', models.PositiveIntegerField(db_index=True, default=0, help_text="Ordre d'affichage des produits en vedette")),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('DRAFT', 'Draft'), ('DISCONTINUED', 'Discontinued')], db_index=True, default='ACTIVE', max_length=20)),
                ('tax_percentage', models.FloatField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('brand', models.CharField(blank=True, db_index=True, max_length=255, null=True)),
                ('brand_model', models.CharField(blank=True, max_length=255, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.category')),
            ],
            options={
                'ordering': ['display_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10, validators=[django.core.validators.MinValueValidator(0)])),
                ('description', models.TextField()),
                ('stock_quantity', models.PositiveIntegerField(default=0)),
                ('sku', models.CharField(blank=True, db_index=True, max_length=100, null=True, unique=True)),
                ('display_order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage des déclinaisons de produit")),
                ('created_at', models.DateTimeField(db_index=True, default=django.utils.timezone.now)),
                ('deleted_at', models.DateTimeField(blank=True, db_index=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('OUT_OF_STOCK', 'Out of Stock')], db_index=True, default='ACTIVE', max_length=20)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.product')),
            ],
            options={
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=Products.models.product_image_upload_path)),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('is_primary', models.BooleanField(default=False)),
                ('display_order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage dans les galeries")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='Products.productitem')),
            ],
            options={
                'ordering': ['display_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductQuestion',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('question', models.TextField()),
                ('answer', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending Answer'), ('ANSWERED', 'Answered')], db_index=True, default='PENDING', max_length=20)),
                ('display_order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage des questions")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('answer_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='answered_questions', to=settings.AUTH_USER_MODEL)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='Products.product')),
                ('question_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='asked_questions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['display_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductReview',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('rating', models.FloatField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('review_text', models.TextField()),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('PENDING', 'Pending Approval'), ('REJECTED', 'Rejected')], db_index=True, default='PENDING', max_length=20)),
                ('display_order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage des avis")),
                ('created_at', models.DateTimeField(auto_now_add=True, db_index=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reviews', to='Products.product')),
                ('review_user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_reviews', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['display_order', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='ProductReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(upload_to=Products.models.review_image_upload_path)),
                ('alt_text', models.CharField(blank=True, max_length=255)),
                ('display_order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage des images dans l'avis")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='Products.productreview')),
            ],
            options={
                'ordering': ['display_order', 'created_at'],
            },
        ),
        migrations.CreateModel(
            name='Promotion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=200)),
                ('description', models.TextField()),
                ('discount_rate', models.DecimalField(decimal_places=2, max_digits=5, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(100)])),
                ('start_date', models.DateTimeField(db_index=True)),
                ('end_date', models.DateTimeField(db_index=True)),
                ('is_active', models.BooleanField(db_index=True, default=True)),
                ('display_order', models.PositiveIntegerField(db_index=True, default=0, help_text="Ordre d'affichage sur la page d'accueil")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
            ],
            options={
                'ordering': ['display_order', '-start_date'],
                'indexes': [models.Index(fields=['start_date', 'end_date', 'is_active'], name='Products_pr_start_d_a8dcd5_idx'), models.Index(fields=['is_active', 'start_date'], name='Products_pr_is_acti_6d9227_idx'), models.Index(fields=['is_active', 'display_order'], name='Products_pr_is_acti_bb4ac0_idx')],
            },
        ),
        migrations.CreateModel(
            name='PromotionProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage des produits en promotion")),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.productitem')),
                ('promotion', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.promotion')),
            ],
            options={
                'ordering': ['display_order'],
            },
        ),
        migrations.CreateModel(
            name='Variation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(db_index=True, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.category')),
            ],
        ),
        migrations.CreateModel(
            name='VariationOption',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('variation', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.variation')),
            ],
        ),
        migrations.CreateModel(
            name='ProductConfiguration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('display_order', models.PositiveIntegerField(default=0, help_text="Ordre d'affichage des configurations")),
                ('product_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.productitem')),
                ('variation_option', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Products.variationoption')),
            ],
            options={
                'ordering': ['display_order'],
            },
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['name', 'deleted_at'], name='Products_ca_name_54719e_idx'),
        ),
        migrations.AddIndex(
            model_name='category',
            index=models.Index(fields=['display_order', 'parent_category'], name='Products_ca_display_cce5ce_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['status', 'deleted_at'], name='Products_pr_status_82b169_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'status'], name='Products_pr_categor_953144_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['brand', 'status'], name='Products_pr_brand_e9a8a5_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['created_at', 'status'], name='Products_pr_created_0961e4_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['category', 'display_order', 'status'], name='Products_pr_categor_e8d0c6_idx'),
        ),
        migrations.AddIndex(
            model_name='productitem',
            index=models.Index(fields=['product', 'status'], name='Products_pr_product_013b91_idx'),
        ),
        migrations.AddIndex(
            model_name='productitem',
            index=models.Index(fields=['sku'], name='Products_pr_sku_b9ec43_idx'),
        ),
        migrations.AddIndex(
            model_name='productitem',
            index=models.Index(fields=['status', 'deleted_at'], name='Products_pr_status_0d78dd_idx'),
        ),
        migrations.AddIndex(
            model_name='productitem',
            index=models.Index(fields=['product', 'display_order'], name='Products_pr_product_4d6fce_idx'),
        ),
        migrations.AddIndex(
            model_name='productimage',
            index=models.Index(fields=['product', 'is_primary'], name='Products_pr_product_003c71_idx'),
        ),
        migrations.AddIndex(
            model_name='productimage',
            index=models.Index(fields=['product', 'display_order'], name='Products_pr_product_e9d5bc_idx'),
        ),
        migrations.AddIndex(
            model_name='productquestion',
            index=models.Index(fields=['product', 'status'], name='Products_pr_product_b761f6_idx'),
        ),
        migrations.AddIndex(
            model_name='productquestion',
            index=models.Index(fields=['question_user', 'created_at'], name='Products_pr_questio_2c58e4_idx'),
        ),
        migrations.AddIndex(
            model_name='productquestion',
            index=models.Index(fields=['status', 'created_at'], name='Products_pr_status_6e239b_idx'),
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['product', 'status', 'rating'], name='Products_pr_product_ad81ec_idx'),
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['review_user', 'created_at'], name='Products_pr_review__038ba3_idx'),
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['status', 'created_at'], name='Products_pr_status_ae5844_idx'),
        ),
        migrations.AddIndex(
            model_name='productreview',
            index=models.Index(fields=['product', 'created_at'], name='Products_pr_product_711b41_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productreview',
            unique_together={('product', 'review_user')},
        ),
        migrations.AddIndex(
            model_name='promotionproduct',
            index=models.Index(fields=['product', 'promotion'], name='Products_pr_product_f788a5_idx'),
        ),
        migrations.AddIndex(
            model_name='promotionproduct',
            index=models.Index(fields=['promotion', 'created_at'], name='Products_pr_promoti_8a64f6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='promotionproduct',
            unique_together={('product', 'promotion')},
        ),
        migrations.AddIndex(
            model_name='variation',
            index=models.Index(fields=['category', 'name'], name='Products_va_categor_efe148_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='variation',
            unique_together={('category', 'name')},
        ),
        migrations.AddIndex(
            model_name='variationoption',
            index=models.Index(fields=['variation', 'value'], name='Products_va_variati_0cc3ca_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='variationoption',
            unique_together={('variation', 'value')},
        ),
        migrations.AddIndex(
            model_name='productconfiguration',
            index=models.Index(fields=['product_item', 'variation_option'], name='Products_pr_product_1083a6_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='productconfiguration',
            unique_together={('product_item', 'variation_option')},
        ),
    ]
